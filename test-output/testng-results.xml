<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="1" total="6" passed="3">
  <reporter-output>
    <line>
      <![CDATA[Test Logger Same Under the test]]>
    </line>
  </reporter-output>
  <suite name="Command line suite" duration-ms="5495" started-at="2016-02-02T17:18:32Z" finished-at="2016-02-02T17:18:37Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="5495" started-at="2016-02-02T17:18:32Z" finished-at="2016-02-02T17:18:37Z">
      <class name="com.test.sample.Sample2Test">
        <test-method status="PASS" signature="setUp()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="setUp" is-config="true" duration-ms="5069" started-at="2016-02-02T22:48:32Z" finished-at="2016-02-02T22:48:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="beforeMethod" is-config="true" duration-ms="90" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testApp4()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="testApp4" duration-ms="1" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApp4 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="afterMethod" is-config="true" duration-ms="194" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testApp4 on [Sample2Test passed=0 failed=0 skipped=0] status=SUCCESS method=Sample2Test.testApp4()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="afterMethod" is-config="true" duration-ms="30" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testApp5 on [Sample2Test passed=0 failed=0 skipped=0] status=SUCCESS method=Sample2Test.testApp5()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]] output=Test Logger Same Under the test]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testApp5()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="testApp5" duration-ms="0" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <reporter-output>
            <line>
              <![CDATA[Test Logger Same Under the test]]>
            </line>
          </reporter-output>
        </test-method> <!-- testApp5 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="testApp6()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="testApp6" duration-ms="2" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.test.sample.Sample2Test.testApp6(Sample2Test.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at com.test.sample.Runner.testRunnerTestNg(Runner.java:77)
	at com.test.sample.Runner$1.run(Runner.java:27)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApp6 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="afterMethod" is-config="true" duration-ms="25" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testApp6 on [Sample2Test passed=0 failed=0 skipped=0] status=SKIP method=Sample2Test.testApp6()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="testApp6()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="testApp6" duration-ms="1" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.test.sample.Sample2Test.testApp6(Sample2Test.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at com.test.sample.Runner.testRunnerTestNg(Runner.java:77)
	at com.test.sample.Runner$1.run(Runner.java:27)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApp6 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="afterMethod" is-config="true" duration-ms="26" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testApp6 on [Sample2Test passed=0 failed=0 skipped=0] status=SKIP method=Sample2Test.testApp6()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testApp6()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="testApp6" duration-ms="0" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.test.sample.Sample2Test.testApp6(Sample2Test.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at com.test.sample.Runner.testRunnerTestNg(Runner.java:77)
	at com.test.sample.Runner$1.run(Runner.java:27)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApp6 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="afterMethod" is-config="true" duration-ms="26" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testApp6 on [Sample2Test passed=0 failed=0 skipped=0] status=FAILURE method=Sample2Test.testApp6()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testApp7()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="testApp7" duration-ms="0" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApp7 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="afterMethod" is-config="true" duration-ms="24" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testApp7 on [Sample2Test passed=0 failed=0 skipped=0] status=SUCCESS method=Sample2Test.testApp7()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closeReport()[pri:0, instance:[Sample2Test passed=0 failed=0 skipped=0]]" name="closeReport" is-config="true" duration-ms="2" started-at="2016-02-02T22:48:37Z" finished-at="2016-02-02T22:48:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- com.test.sample.Sample2Test -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
